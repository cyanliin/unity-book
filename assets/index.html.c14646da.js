import{_ as c,r as i,o as r,c as o,a as e,b as n,d as s,e as t}from"./app.74848dc1.js";const p="/unity-book/assets/active.04023b67.png",l={},d=t('<h1 id="啟用與停用-setactive" tabindex="-1"><a class="header-anchor" href="#啟用與停用-setactive" aria-hidden="true">#</a> 啟用與停用 SetActive</h1><p>Unity 的物件都有 Active 這個屬性，當 Active 設為 true 時，它代表物件否可看得見、有作用，當設為 false 則相反。</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>Active 設為 false 的物件，雖然在遊戲中看不見、不會起作用，但他並沒有從場景中被實際刪除，只是暫時隱藏了起來，仍然佔有記憶體，等待著再被設回 true。</p></div><div class="custom-container tip"><p class="custom-container-title">使用慣例</p><p>通常用於將物件&quot;暫時&quot;隱藏、啟用，方便隨時改變狀態，而不用重新產生。</p><p>例如：預先安排好、並等待時機出場的物件、防護罩、UI、輪流替換的物件(多個武器、裝備)。</p></div><h2 id="透過-inspector-面板勾選" tabindex="-1"><a class="header-anchor" href="#透過-inspector-面板勾選" aria-hidden="true">#</a> 透過 Inspector 面板勾選</h2><p><img src="'+p+`" alt="active"></p><h2 id="透過-script-指定" tabindex="-1"><a class="header-anchor" href="#透過-script-指定" aria-hidden="true">#</a> 透過 Script 指定</h2><h3 id="setactive" tabindex="-1"><a class="header-anchor" href="#setactive" aria-hidden="true">#</a> SetActive()</h3><p>SetActive 是 GameObject 類別裡的方法，所以要先取得物件本身的 gameObject 才能對其啟用/停用。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 啟用</span>
gameObject<span class="token punctuation">.</span><span class="token function">SetActive</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 停用</span>
gameObject<span class="token punctuation">.</span><span class="token function">SetActive</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),h={href:"https://docs.unity3d.com/ScriptReference/GameObject.SetActive.html",target:"_blank",rel:"noopener noreferrer"},u=t(`<h2 id="取得目前-active-狀態" tabindex="-1"><a class="header-anchor" href="#取得目前-active-狀態" aria-hidden="true">#</a> 取得目前 Active 狀態</h2><h3 id="activeself" tabindex="-1"><a class="header-anchor" href="#activeself" aria-hidden="true">#</a> activeSelf</h3><p>activeSelf 會回傳物件自身的 active 狀態。</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>在遊戲中的物件 Active 狀態也取決於父層是否啟用，所以即使 activeSelf 回傳為 true，仍有可能因其父層物件在停用中，而仍處於停用狀態。改用 activeInHierarchy 則可以取得物件實際上有沒有啟用。</p></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">bool</span></span> isActived <span class="token operator">=</span> gameObject<span class="token punctuation">.</span>activeSelf<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),v={href:"https://docs.unity3d.com/ScriptReference/GameObject-activeSelf.html",target:"_blank",rel:"noopener noreferrer"},m=t(`<h3 id="activeinhierarchy" tabindex="-1"><a class="header-anchor" href="#activeinhierarchy" aria-hidden="true">#</a> activeInHierarchy</h3><p>有別於 activeSelf， activeInHierarchy 會回傳物件實際上在遊戲中是否真的啟用。而非僅物件自身的 active 狀態。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">bool</span></span> isReallyActived <span class="token operator">=</span> gameObject<span class="token punctuation">.</span>activeInHierarchy<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),b={href:"https://docs.unity3d.com/ScriptReference/GameObject-activeInHierarchy.html",target:"_blank",rel:"noopener noreferrer"};function f(k,_){const a=i("ExternalLinkIcon");return r(),o("div",null,[d,e("p",null,[e("a",h,[n("官方文件：GameObject.SetActive"),s(a)])]),u,e("p",null,[e("a",v,[n("官方文件：GameObject.activeSelf"),s(a)])]),m,e("p",null,[e("a",b,[n("官方文件：GameObject.activeInHierarchy"),s(a)])])])}const S=c(l,[["render",f],["__file","index.html.vue"]]);export{S as default};
