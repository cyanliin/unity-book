import{_ as e,o as n,c as r,e as o}from"./app.74848dc1.js";const t="/unity-book/assets/inspector.94909280.png",a="/unity-book/assets/transform.d8ad94ae.png",s="/unity-book/assets/mesh-filter.6dbe3eaf.png",i="/unity-book/assets/mesh-renderer.8fa078d5.png",d="/unity-book/assets/collider.299b8534.png",p={},h=o('<h1 id="物件組成" tabindex="-1"><a class="header-anchor" href="#物件組成" aria-hidden="true">#</a> 物件組成</h1><p>在 Unity 之中常見的物件都是由一些&quot;Component&quot;(組件) 所組成的。即使是一個單純的立方體之中，也至少有四種 Component。這些都可以在選取物件時，透過 Inspector 面板看見其中的組件列表。</p><p>讓我們先來快速瞭解一下這四個基礎的 Component。</p><p><img src="'+t+'" alt="inspector panel"></p><h2 id="基礎-component" tabindex="-1"><a class="header-anchor" href="#基礎-component" aria-hidden="true">#</a> 基礎 Component</h2><p>下面以一個立方體所預設的四種 Component 當例子來做介紹。</p><h3 id="transform-變形" tabindex="-1"><a class="header-anchor" href="#transform-變形" aria-hidden="true">#</a> Transform (變形)</h3><p>定義了物件的位置、旋轉、縮放。</p><p><img src="'+a+'" alt="tranform"></p><h3 id="mesh-filter-造型定義" tabindex="-1"><a class="header-anchor" href="#mesh-filter-造型定義" aria-hidden="true">#</a> Mesh Filter (造型定義)</h3><p>用來定義多邊形造型，通常是由 3D 軟體製作後直接匯入，不太需要更動到此項目。</p><p><img src="'+s+'" alt="mesh-filter"></p><h3 id="mesh-renderer-算圖效果" tabindex="-1"><a class="header-anchor" href="#mesh-renderer-算圖效果" aria-hidden="true">#</a> Mesh Renderer (算圖效果)</h3><p>掌管多邊形的算圖(顯示)顯示效果。</p><p><img src="'+i+'" alt="mesh-renderer"></p><h3 id="box-collider-碰撞框" tabindex="-1"><a class="header-anchor" href="#box-collider-碰撞框" aria-hidden="true">#</a> (Box) Collider (碰撞框)</h3><p>用來定義碰撞框的範圍，<em><strong>是物理系統中實際用來判定範圍的東西</strong></em>，在遊戲製作中有關鍵的作用。實際執行遊戲時 Collider 並不會被看見。</p><p><img src="'+d+'" alt="collider"></p><h2 id="新增其他-component" tabindex="-1"><a class="header-anchor" href="#新增其他-component" aria-hidden="true">#</a> 新增其他 Component</h2><p>Unity 提供了非常多種類型的 Component，這些 Component 都提供了一些特殊的特性。可以藉由按下 Inspector 面板最下方的 Add Component 按鈕來自由新增。</p><p>我們將在其他章節中陸續使用其他 Component。</p>',21),c=[h];function m(l,_){return n(),r("div",null,c)}const u=e(p,[["render",m],["__file","index.html.vue"]]);export{u as default};
