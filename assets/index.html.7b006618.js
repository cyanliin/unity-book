import{_ as n,o as s,c as a,e as t}from"./app.74848dc1.js";const e="/unity-book/assets/project.ec6e2e4c.png",p="/unity-book/assets/balls.2375941b.gif",c={},o=t(`<h1 id="複製方法說明" tabindex="-1"><a class="header-anchor" href="#複製方法說明" aria-hidden="true">#</a> 複製方法說明</h1><p>複製物件在遊戲中是很常見的動作，例如：子彈、怪物生成、...。 Unity 中複製物件的方式是透過 Instantiate 這個函式來達成的。</p><h2 id="instantiate-用法" tabindex="-1"><a class="header-anchor" href="#instantiate-用法" aria-hidden="true">#</a> Instantiate 用法</h2><p>Instantiate 有好幾種寫法，下面列出幾種常見的：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 在原地複製</span>
<span class="token function">Instantiate</span><span class="token punctuation">(</span>來源物件<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 複製後並指定坐標、旋轉</span>
<span class="token function">Instantiate</span><span class="token punctuation">(</span>來源物件<span class="token punctuation">,</span> 生成座標<span class="token punctuation">,</span> 旋轉<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">回傳類型</p><p>由於 Instantiate 回傳的類型預設為最基礎 C# Object，如果要利用複製出來的物件進行其他操作，就必須轉型為 Unity 常用的 GameObject 或自訂類別。</p><p>所以複製時建議統一採用下面的做法：</p></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 複製後並指定坐標、旋轉，並且指定回傳的類別</span>
<span class="token generic-method"><span class="token function">Instantiate</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>類別<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>來源物件<span class="token punctuation">,</span> 生成座標<span class="token punctuation">,</span> 旋轉<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="範例-按下空白鍵產生" tabindex="-1"><a class="header-anchor" href="#範例-按下空白鍵產生" aria-hidden="true">#</a> 範例：按下空白鍵產生</h2><ul><li>新增一個空白 3D 專案。</li><li>建立地板與球體。</li><li>在球體上增加 Rigidbody 元件。</li><li>建立一個 Empty 空物件，改名為 GameControl，並對其增加下方 Script。</li><li>將球體拖曳指定到 GameControl 的 ball 參數中。</li></ul><p><img src="`+e+`" alt="&#39;project&#39;"></p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">UnityEngine</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GameControl</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MonoBehaviour</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">GameObject</span> ball<span class="token punctuation">;</span> <span class="token comment">// 來源物件 (從 Unity 中拖入指定)</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 按下空白鍵</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Input<span class="token punctuation">.</span><span class="token function">GetKeyDown</span><span class="token punctuation">(</span>KeyCode<span class="token punctuation">.</span>Space<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// 複製球體、生成位置在 (0,5,0)、旋轉方向為0</span>
            <span class="token class-name">GameObject</span> newBall <span class="token operator">=</span> <span class="token generic-method"><span class="token function">Instantiate</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>GameObject<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>ball<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Vector3</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Quaternion<span class="token punctuation">.</span>identity<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 隨機推動複製出來的球</span>
            <span class="token class-name">Rigidbody</span> rb <span class="token operator">=</span> newBall<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetComponent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Rigidbody<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">float</span></span> rx <span class="token operator">=</span> Random<span class="token punctuation">.</span><span class="token function">Range</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.2f</span><span class="token punctuation">,</span> <span class="token number">0.2f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">float</span></span> ry <span class="token operator">=</span> Random<span class="token punctuation">.</span><span class="token function">Range</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.2f</span><span class="token punctuation">,</span> <span class="token number">0.2f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">float</span></span> rz <span class="token operator">=</span> Random<span class="token punctuation">.</span><span class="token function">Range</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.2f</span><span class="token punctuation">,</span> <span class="token number">0.2f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            rb<span class="token punctuation">.</span><span class="token function">AddForce</span><span class="token punctuation">(</span>rx<span class="token punctuation">,</span> ry<span class="token punctuation">,</span> rz<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+p+'" alt="&#39;create balls&#39;"></p>',12),i=[o];function l(u,k){return s(),a("div",null,i)}const d=n(c,[["render",l],["__file","index.html.vue"]]);export{d as default};
