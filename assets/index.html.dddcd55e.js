import{_ as e,r as t,o as p,c,a as s,b as n,d as i,w as o,e as l}from"./app.74848dc1.js";const r="/unity-book/assets/apply.5255aa76.png",u="/unity-book/assets/play.a7dfd336.gif",d={},k=s("h1",{id:"簡易-script-控制攝影機跟隨",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#簡易-script-控制攝影機跟隨","aria-hidden":"true"},"#"),n(" 簡易 Script 控制攝影機跟隨")],-1),m=l(`<h2 id="原理說明" tabindex="-1"><a class="header-anchor" href="#原理說明" aria-hidden="true">#</a> 原理說明</h2><p>攝影機腳本：</p><ol><li>開始遊戲時(Start)，計算出目前位置與玩家的座標差異，並把差異數存下來</li><li>遊戲執行時(Update)，攝影機位置 ＝ 目前玩家位置＋差異數</li></ol><h2 id="攝影機-script" tabindex="-1"><a class="header-anchor" href="#攝影機-script" aria-hidden="true">#</a> 攝影機 Script</h2><ol><li>在攝影機(Main Camera) 上新增 Script，名為 CameraController</li><li>寫入下方程式</li></ol><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">UnityEngine</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CameraController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MonoBehaviour</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">GameObject</span> target<span class="token punctuation">;</span> <span class="token comment">// 追蹤的目標（在Unity中拖曳指定）</span>
    <span class="token keyword">private</span> <span class="token class-name">Vector3</span> offset<span class="token punctuation">;</span> <span class="token comment">// 與目標的座標差異</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 遊戲開始時，先計算自己與目標的座標差異，並儲存起來</span>
        offset <span class="token operator">=</span> transform<span class="token punctuation">.</span>position <span class="token operator">-</span> target<span class="token punctuation">.</span>transform<span class="token punctuation">.</span>position<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 遊戲執行時，一直將自己座標設為：目標座標 + 差異數</span>
        transform<span class="token punctuation">.</span>position <span class="token operator">=</span> target<span class="token punctuation">.</span>transform<span class="token punctuation">.</span>position <span class="token operator">+</span> offset<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="指定玩家-gameobject" tabindex="-1"><a class="header-anchor" href="#指定玩家-gameobject" aria-hidden="true">#</a> 指定玩家 GameObject</h2><p>在攝影機的 Script 中有新增了一個 public 的 GameObject 類型變數，名叫 target，這代表我們可以透過 Inspector 視窗去指定 target 關聯的物件。</p><p>所以回到 Unity 並把玩家物件拖入 target 參數中</p><p><img src="`+r+'" alt="apply"></p><h2 id="執行遊戲" tabindex="-1"><a class="header-anchor" href="#執行遊戲" aria-hidden="true">#</a> 執行遊戲</h2><p><img src="'+u+'" alt="play"></p>',12);function v(h,b){const a=t("RouterLink");return p(),c("div",null,[k,s("p",null,[n("這邊介紹一種簡易的方式，主要用於初學練習。實際在遊戲製作中建議使用 "),i(a,{to:"/basics/camera-follow/cinemachine/"},{default:o(()=>[n("Cinemachine")]),_:1}),n("。")]),m])}const y=e(d,[["render",v],["__file","index.html.vue"]]);export{y as default};
