import{_ as n,o as a,c as s,e}from"./app.74848dc1.js";const t="/unity-book/assets/lerp.f141d934.png",p={},c=e('<h1 id="lerp-解說" tabindex="-1"><a class="header-anchor" href="#lerp-解說" aria-hidden="true">#</a> Lerp 解說</h1><p>採用漸進移動的方式可以讓物體行為較生動，Lerp 與 Tween 就是程式上達成漸進行為的兩種常用方式。</p><p>內建於 Unity 大多數的數值物件之中（Vector2, Vector3, Quaternion...)。 Lerp 的概念十分簡單，它可以依自訂比例在 Ａ 與 Ｂ 之間取一個中間值。</p><p><img src="'+t+`" alt="lerp"></p><h2 id="寫法" tabindex="-1"><a class="header-anchor" href="#寫法" aria-hidden="true">#</a> 寫法</h2><blockquote><p>Lerp(A, B, 比例T);</p></blockquote><h3 id="float" tabindex="-1"><a class="header-anchor" href="#float" aria-hidden="true">#</a> float</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">float</span></span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">float</span></span> b <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
Mathf<span class="token punctuation">.</span><span class="token function">Lerp</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token number">0.1f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// return: 10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vector3" tabindex="-1"><a class="header-anchor" href="#vector3" aria-hidden="true">#</a> Vector3</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Vector3</span>
<span class="token class-name">Vector3</span> va <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Vector3</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Vector3</span> vb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Vector3</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Vector3<span class="token punctuation">.</span><span class="token function">Lerp</span><span class="token punctuation">(</span>va<span class="token punctuation">,</span> vb<span class="token punctuation">,</span> <span class="token number">0.2f</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return: (2, 10, 20)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="quaternion" tabindex="-1"><a class="header-anchor" href="#quaternion" aria-hidden="true">#</a> Quaternion</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Vector3</span>
<span class="token class-name">Quaternion</span> qa <span class="token operator">=</span> Quaternion<span class="token punctuation">.</span><span class="token function">Euler</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Quaternion</span> qb <span class="token operator">=</span> Quaternion<span class="token punctuation">.</span><span class="token function">Euler</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Quaternion<span class="token punctuation">.</span><span class="token function">Lerp</span><span class="token punctuation">(</span>qa<span class="token punctuation">,</span> qb<span class="token punctuation">,</span> <span class="token number">0.3f</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return: to Euler (6, 12, 18)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),o=[c];function l(u,r){return a(),s("div",null,o)}const k=n(p,[["render",l],["__file","index.html.vue"]]);export{k as default};
